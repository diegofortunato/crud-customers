---
openapi: 3.0.1
info:
  title: CRUD Customer Documentation
  version: v0
servers:
  - url: http://localhost:8080/
    description: Generated server url
paths:
  "/v1/customer":
    get:
      tags:
        - customer-controller
      operationId: findAllConsumers
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: name
          in: query
          required: false
          schema:
            type: string
            default: ''
        - name: type
          in: query
          required: false
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ResponsePaginationListCustomerDTO"
    post:
      tags:
        - customer-controller
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RequestCustomerDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ResponseCustomerDTO"
  "/v1/customer/{id}":
    delete:
      tags:
        - customer-controller
      operationId: deleteCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ResponseCustomerDTO"
    patch:
      tags:
        - customer-controller
      operationId: updateCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RequestCustomerDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ResponseCustomerDTO"
components:
  schemas:
    AddressDTO:
      required:
        - cep
        - city
        - district
        - state
        - street
      type: object
      properties:
        id:
          type: integer
          format: int64
          writeOnly: true
        street:
          type: string
        district:
          type: string
        city:
          type: string
        state:
          type: string
        cep:
          type: string
        addressID:
          type: integer
          format: int64
    CustomerCorporateDTO:
      type: object
      properties:
        cnpj:
          type: string
        company_name:
          type: string
          writeOnly: true
        companyName:
          type: string
    CustomerDTO:
      required:
        - address
        - document
        - email
        - telephone
      type: object
      properties:
        id:
          type: integer
          format: int64
          writeOnly: true
        document:
          maxLength: 18
          minLength: 14
          type: string
        telephone:
          type: string
        email:
          type: string
        address:
          "$ref": "#/components/schemas/AddressDTO"
        status:
          type: string
          writeOnly: true
          enum:
            - ATIVE
            - INACTIVE
        customer_pf:
          "$ref": "#/components/schemas/CustomerIndividualDTO"
        customer_pj:
          "$ref": "#/components/schemas/CustomerCorporateDTO"
        create_at:
          type: string
          format: date
          writeOnly: true
        update_at:
          type: string
          format: date
          writeOnly: true
        customerID:
          type: integer
          format: int64
        customerStatus:
          type: string
          enum:
            - ATIVE
            - INACTIVE
        customerIndividual:
          "$ref": "#/components/schemas/CustomerIndividualDTO"
        customerCorporate:
          "$ref": "#/components/schemas/CustomerCorporateDTO"
        createAt:
          type: string
          format: date
        updateAt:
          type: string
          format: date
    CustomerIndividualDTO:
      type: object
      properties:
        cpf:
          type: string
        name:
          type: string
          writeOnly: true
        fullName:
          type: string
    RequestCustomerDTO:
      required:
        - request
      type: object
      properties:
        request:
          "$ref": "#/components/schemas/CustomerDTO"
    ResponseCustomerDTO:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/CustomerDTO"
    ResponsePaginationListCustomerDTO:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/CustomerDTO"
        totalPages:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int64
